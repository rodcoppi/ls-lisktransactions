# Artillery Multi-Region Geographic Load Testing
# Simulates global traffic patterns from different geographic regions

config:
  target: "{{ $processEnvironment.LOAD_TEST_BASE_URL || 'http://localhost:3000' }}"

  # Geographic load testing configuration
  http:
    timeout: 45 # Account for geographic latency
    pool: 75
    maxSockets: 75
    keepAlive: true

  # Multi-region test phases simulating global usage patterns
  phases:
    # Phase 1: Asia Pacific morning traffic (6 AM - 12 PM UTC+8)
    - duration: 600 # 10 minutes
      arrivalRate: 80
      name: "APAC Morning Traffic"

    # Phase 2: Europe morning overlap (8 AM - 12 PM UTC+1)
    - duration: 600
      arrivalRate: 120
      name: "Europe + APAC Overlap"

    # Phase 3: Europe business hours (12 PM - 6 PM UTC+1)
    - duration: 900 # 15 minutes
      arrivalRate: 150
      name: "Europe Business Hours"

    # Phase 4: Americas morning start (8 AM - 12 PM UTC-5)
    - duration: 900
      arrivalRate: 200
      name: "Americas + Europe Peak"

    # Phase 5: Global peak (12 PM - 6 PM UTC-5)
    - duration: 1200 # 20 minutes
      arrivalRate: 300
      name: "Global Peak Traffic"

    # Phase 6: Americas evening (6 PM - 10 PM UTC-5)
    - duration: 600
      arrivalRate: 180
      name: "Americas Evening"

    # Phase 7: APAC evening start (6 PM - 10 PM UTC+8)
    - duration: 600
      arrivalRate: 100
      name: "APAC Evening Ramp"

    # Phase 8: Global wind-down
    - duration: 300
      arrivalRate: 100
      rampTo: 20
      name: "Global Wind-down"

  # Geographic test data
  payload:
    path: "../data/geographic-test-data.csv"
    fields:
      - "region"
      - "country"
      - "timezone"
      - "userId"
      - "sessionId"
      - "userAgent"
      - "acceptLanguage"
    order: sequence
    skipHeader: true

  # Region-specific headers
  defaults:
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
      User-Agent: "{{ userAgent }}"
      Accept-Language: "{{ acceptLanguage }}"
      X-Forwarded-For: "{{ $processEnvironment.CLIENT_IP || '127.0.0.1' }}"
      X-Real-IP: "{{ $processEnvironment.CLIENT_IP || '127.0.0.1' }}"

  # Geographic variables
  variables:
    regions: ["us-east", "us-west", "eu-west", "eu-central", "ap-south", "ap-northeast"]
    countries: ["US", "GB", "DE", "FR", "JP", "AU", "CA", "IN", "BR", "SG"]
    timezones:
      [
        "America/New_York",
        "America/Los_Angeles",
        "Europe/London",
        "Europe/Berlin",
        "Asia/Tokyo",
        "Australia/Sydney",
      ]
    languages: ["en-US", "en-GB", "de-DE", "fr-FR", "ja-JP", "zh-CN", "es-ES", "pt-BR"]

  # Plugin configuration for geographic analysis
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
      stripQueryString: false
    publish-metrics:
      - type: statsd
        host: "{{ $processEnvironment.STATSD_HOST || 'localhost' }}"
        port: "{{ $processEnvironment.STATSD_PORT || 8125 }}"
        prefix: "artillery.geographic"
        tags:
          - "test_type:geographic"
          - "region:{{ region }}"
    expect:
      outputFormat: json
      reportFailuresAsErrors: true

  # Geographic testing settings
  statsInterval: 15
  maxVusers: 5000
  rateLimit: 400

# Geographic test expectations
expectations:
  - http.response_time.p99: 3000 # Allow for geographic latency
  - http.response_time.p95: 1500 # Regional CDN should help
  - http.response_time.median: 400 # Median should be reasonable
  - http.codes.200: 98.5 # High success rate expected
  - http.codes.4xx: 1 # Low client error rate
  - http.codes.5xx: 0.5 # Very low server error rate

# Geographic scenarios representing different regional usage patterns
scenarios:
  # North America usage patterns
  - name: "North America Traffic"
    weight: 35
    flow:
      - think: "{{ $randomNumber(1, 3) }}"

      # Typical US business user workflow
      - post:
          url: "/api/auth/login"
          name: "NA - User Login"
          json:
            email: "user{{ $randomInt(1, 10000) }}@company.com"
            password: "LoadTest123!"
            timezone: "{{ timezones[$randomInt(0, 1)] }}"
          headers:
            Accept-Language: "en-US,en;q=0.9"
            X-Region: "north-america"
          capture:
            - json: "$.token"
              as: "naToken"
          expect:
            - statusCode: [200, 401]

      - think: 2

      - get:
          url: "/api/metrics?range=24h&timezone=America/New_York"
          name: "NA - Business Metrics"
          headers:
            Authorization: "Bearer {{ naToken }}"
            Accept-Language: "en-US,en;q=0.9"
            X-Region: "north-america"
          expect:
            - statusCode: [200, 401]
            - contentType: "application/json"

      - think: "{{ $randomNumber(2, 5) }}"

      - get:
          url: "/api/events?region=na&limit=50"
          name: "NA - Regional Events"
          headers:
            Authorization: "Bearer {{ naToken }}"
            X-Region: "north-america"
          expect:
            - statusCode: [200, 401]

  # Europe usage patterns
  - name: "Europe Traffic"
    weight: 30
    flow:
      - think: "{{ $randomNumber(1, 4) }}"

      # European user workflow with GDPR considerations
      - post:
          url: "/api/auth/login"
          name: "EU - User Login"
          json:
            email: "user{{ $randomInt(1, 8000) }}@company.eu"
            password: "LoadTest123!"
            timezone: "{{ timezones[$randomInt(2, 3)] }}"
            gdpr_consent: true
          headers:
            Accept-Language: "{{ languages[$randomInt(2, 4)] }}"
            X-Region: "europe"
          capture:
            - json: "$.token"
              as: "euToken"
          expect:
            - statusCode: [200, 401]

      - think: 3

      - get:
          url: "/api/metrics?range=6h&timezone=Europe/London&gdpr=true"
          name: "EU - GDPR Compliant Metrics"
          headers:
            Authorization: "Bearer {{ euToken }}"
            Accept-Language: "{{ languages[$randomInt(2, 4)] }}"
            X-Region: "europe"
          expect:
            - statusCode: [200, 401]
            - header: "X-GDPR-Compliant"

      - think: "{{ $randomNumber(3, 6) }}"

      - get:
          url: "/api/notifications?region=eu&lang={{ languages[$randomInt(2, 4)] }}"
          name: "EU - Localized Notifications"
          headers:
            Authorization: "Bearer {{ euToken }}"
            X-Region: "europe"
          expect:
            - statusCode: [200, 401]

  # Asia Pacific usage patterns
  - name: "Asia Pacific Traffic"
    weight: 25
    flow:
      - think: "{{ $randomNumber(2, 4) }}"

      # APAC user workflow with mobile-first approach
      - post:
          url: "/api/auth/login"
          name: "APAC - Mobile Login"
          json:
            email: "user{{ $randomInt(1, 12000) }}@company.asia"
            password: "LoadTest123!"
            timezone: "{{ timezones[$randomInt(4, 5)] }}"
            device_type: "mobile"
          headers:
            Accept-Language: "{{ languages[$randomInt(5, 6)] }}"
            User-Agent: "Mobile App/1.0 (Android)"
            X-Region: "asia-pacific"
          capture:
            - json: "$.token"
              as: "apacToken"
          expect:
            - statusCode: [200, 401]

      - think: 1

      # Mobile-optimized metrics request
      - get:
          url: "/api/metrics?range=1h&mobile=true&timezone=Asia/Tokyo"
          name: "APAC - Mobile Metrics"
          headers:
            Authorization: "Bearer {{ apacToken }}"
            Accept-Language: "{{ languages[$randomInt(5, 6)] }}"
            User-Agent: "Mobile App/1.0 (Android)"
            X-Region: "asia-pacific"
          expect:
            - statusCode: [200, 401]
            - responseTime: 2000 # Account for longer distance

      - think: "{{ $randomNumber(1, 3) }}"

      - get:
          url: "/api/events?region=apac&mobile=true"
          name: "APAC - Mobile Events"
          headers:
            Authorization: "Bearer {{ apacToken }}"
            X-Region: "asia-pacific"
          expect:
            - statusCode: [200, 401]

  # Global administrative traffic
  - name: "Global Admin Traffic"
    weight: 10
    flow:
      - think: 5

      # Administrative operations
      - post:
          url: "/api/auth/login"
          name: "Admin - Global Login"
          json:
            email: "admin{{ $randomInt(1, 100) }}@company.global"
            password: "AdminTest123!"
            role: "admin"
          headers:
            X-Region: "global"
            X-Admin-Access: "true"
          capture:
            - json: "$.token"
              as: "adminToken"
          expect:
            - statusCode: [200, 401]

      - think: 3

      - get:
          url: "/api/metrics?range=7d&global=true&admin=true"
          name: "Admin - Global Metrics"
          headers:
            Authorization: "Bearer {{ adminToken }}"
            X-Region: "global"
            X-Admin-Access: "true"
          expect:
            - statusCode: [200, 401, 403]
            - responseTime: 5000 # Complex global queries

      - think: 10

      - get:
          url: "/api/alerts?severity=high&global=true"
          name: "Admin - Global Alerts"
          headers:
            Authorization: "Bearer {{ adminToken }}"
            X-Region: "global"
          expect:
            - statusCode: [200, 401, 403]

  # CDN and edge caching testing
  - name: "CDN Performance Test"
    weight: 15
    flow:
      # Test static asset delivery
      - get:
          url: "/static/js/main.js"
          name: "CDN - JavaScript Asset"
          headers:
            X-Region: "{{ region }}"
          expect:
            - statusCode: 200
            - responseTime: 1000 # CDN should be fast
            - header: "X-Cache" # Should indicate cache status

      - get:
          url: "/static/css/main.css"
          name: "CDN - CSS Asset"
          headers:
            X-Region: "{{ region }}"
          expect:
            - statusCode: 200
            - responseTime: 800
            - header: "X-Cache"

      # Test API caching at edge
      - get:
          url: "/api/health"
          name: "CDN - Cached API"
          headers:
            X-Region: "{{ region }}"
          expect:
            - statusCode: 200
            - responseTime: 500
            - header: "X-Cache-Status"

# Before geographic test setup
before:
  - log: "=== Starting Artillery Multi-Region Geographic Test ==="
  - log: "Target: {{ target }}"
  - log: "Simulating global traffic patterns"
  - log: "Testing CDN performance across regions"
  - log: "Validating localization and GDPR compliance"

# After geographic test analysis
after:
  - log: "=== Multi-Region Geographic Test Completed ==="
  - log: "Analyze the following by region:"
  - log: "1. Response time variations by geography"
  - log: "2. CDN cache hit rates and performance"
  - log: "3. Regional error rate differences"
  - log: "4. Localization feature performance"
  - log: "5. GDPR compliance overhead"
  - log: "6. Mobile vs desktop performance gaps"
  - log: "7. Peak hour handling by region"
